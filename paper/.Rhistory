results_tab$Cost = results_tab$RuntimeSecs * cost_per_sec
if (log_scale) {
scale_fn = scale_x_log10
}
else {
scale_fn = scale_x_continuous
}
p = ggplot(results_tab) +
geom_point(aes(x=position_jitter(RuntimeSecs, h=jitter), y=DataType, color=PartitionType)) +
scale_fn("Runtime (Sec)", sec.axis = sec_axis(~ . * cost_per_sec, name = "Cost ($)")) +
ylab("Data Type")
ggsave(paste(prefix, "pdf", sep="."), p)
}
plot_results("results/targeted")
plot_results("results/whole", TRUE, 1000)
plot_results = function(prefix, log_scale=FALSE, jitter=0) {
results = fromJSON(read_file(paste(prefix, "json", sep=".")))
results_tab = na.omit(melt(
rbindlist(results, fill=TRUE, idcol=TRUE),
id.vars=".id"
))
colnames(results_tab) = c("DataType", "PartitionType", "RuntimeSecs")
results_tab$Cost = results_tab$RuntimeSecs * cost_per_sec
if (log_scale) {
scale_fn = scale_x_log10
}
else {
scale_fn = scale_x_continuous
}
p = ggplot(results_tab, aes(x=RuntimeSecs, y=DataType, color=PartitionType)) +
geom_point(position=position_jitter(height=jitter)) +
scale_fn("Runtime (Sec)", sec.axis = sec_axis(~ . * cost_per_sec, name = "Cost ($)")) +
ylab("Data Type")
ggsave(paste(prefix, "pdf", sep="."), p)
}
plot_results("results/targeted")
plot_results("results/whole", TRUE, 1000)
plot_results = function(prefix, log_scale=FALSE, jitter=0) {
results = fromJSON(read_file(paste(prefix, "json", sep=".")))
results_tab = na.omit(melt(
rbindlist(results, fill=TRUE, idcol=TRUE),
id.vars=".id"
))
colnames(results_tab) = c("DataType", "PartitionType", "RuntimeSecs")
results_tab$Cost = results_tab$RuntimeSecs * cost_per_sec
if (log_scale) {
scale_fn = scale_x_log10
}
else {
scale_fn = scale_x_continuous
}
p = ggplot(results_tab, aes(x=RuntimeSecs, y=DataType, color=PartitionType)) +
geom_point(position=position_jitter(height=jitter)) +
scale_fn("Runtime (Sec)", sec.axis = sec_axis(~ . * cost_per_sec, name = "Cost ($)")) +
ylab("Data Type")
ggsave(paste(prefix, "pdf", sep="."), p)
}
plot_results("results/targeted")
plot_results("results/whole", TRUE, 1)
plot_results = function(prefix, log_scale=FALSE, jitter=0.01) {
results = fromJSON(read_file(paste(prefix, "json", sep=".")))
results_tab = na.omit(melt(
rbindlist(results, fill=TRUE, idcol=TRUE),
id.vars=".id"
))
colnames(results_tab) = c("DataType", "PartitionType", "RuntimeSecs")
results_tab$Cost = results_tab$RuntimeSecs * cost_per_sec
if (log_scale) {
scale_fn = scale_x_log10
}
else {
scale_fn = scale_x_continuous
}
p = ggplot(results_tab, aes(x=RuntimeSecs, y=DataType, color=PartitionType)) +
geom_point(position=position_jitter(width=0, height=jitter)) +
scale_fn("Runtime (Sec)", sec.axis = sec_axis(~ . * cost_per_sec, name = "Cost ($)")) +
ylab("Data Type")
ggsave(paste(prefix, "pdf", sep="."), p)
}
plot_results("results/targeted")
plot_results("results/whole", TRUE, 1)
plot_results = function(prefix, log_scale=FALSE, jitter=0) {
results = fromJSON(read_file(paste(prefix, "json", sep=".")))
results_tab = na.omit(melt(
rbindlist(results, fill=TRUE, idcol=TRUE),
id.vars=".id"
))
colnames(results_tab) = c("DataType", "PartitionType", "RuntimeSecs")
results_tab$Cost = results_tab$RuntimeSecs * cost_per_sec
if (log_scale) {
scale_fn = scale_x_log10
}
else {
scale_fn = scale_x_continuous
}
p = ggplot(results_tab, aes(x=RuntimeSecs, y=DataType, color=PartitionType)) +
geom_point(position=position_jitter(width=0, height=jitter)) +
scale_fn("Runtime (Sec)", sec.axis = sec_axis(~ . * cost_per_sec, name = "Cost ($)")) +
ylab("Data Type")
ggsave(paste(prefix, "pdf", sep="."), p)
}
plot_results("results/targeted")
plot_results("results/whole", TRUE, 0.1)
plot_results = function(prefix, log_scale=FALSE, jitter=0) {
results = fromJSON(read_file(paste(prefix, "json", sep=".")))
results_tab = na.omit(melt(
rbindlist(results, fill=TRUE, idcol=TRUE),
id.vars=".id"
))
colnames(results_tab) = c("DataType", "PartitionType", "RuntimeSecs")
results_tab$Cost = results_tab$RuntimeSecs * cost_per_sec
if (log_scale) {
scale_fn = scale_x_log10
scale_lab = "Runtime (Log10(Sec))"
}
else {
scale_fn = scale_x_continuous
scale_lab = "Runtime (Sec)"
}
p = ggplot(results_tab, aes(x=RuntimeSecs, y=DataType, color=PartitionType)) +
geom_point(position=position_jitter(width=0, height=jitter)) +
scale_fn(scale_lab, sec.axis = sec_axis(~ . * cost_per_sec, name = "Cost ($)")) +
ylab("Data Type")
ggsave(paste(prefix, "pdf", sep="."), p)
}
plot_results("results/targeted")
plot_results("results/whole", TRUE, 0.1)
plot_results = function(prefix, log_scale=FALSE, jitter=0) {
results = fromJSON(read_file(paste(prefix, "json", sep=".")))
results_tab = na.omit(melt(
rbindlist(results, fill=TRUE, idcol=TRUE),
id.vars=".id"
))
colnames(results_tab) = c("DataType", "PartitionType", "RuntimeSecs")
results_tab$Cost = results_tab$RuntimeSecs * cost_per_sec
if (log_scale) {
scale_fn = scale_x_log10
scale_lab = "Runtime (Log10(Sec))"
}
else {
scale_fn = scale_x_continuous
scale_lab = "Runtime (Sec)"
}
p = ggplot(results_tab, aes(x=RuntimeSecs, y=DataType, color=PartitionType)) +
geom_point(position=position_jitter(width=0, height=jitter), size=2) +
scale_fn(scale_lab, sec.axis = sec_axis(~ . * cost_per_sec, name = "Cost ($)")) +
ylab("Data Type")
ggsave(paste(prefix, "pdf", sep="."), p)
}
plot_results("results/targeted")
plot_results("results/whole", TRUE, 0.1)
plot_results = function(prefix, log_scale=FALSE, jitter=0) {
results = fromJSON(read_file(paste(prefix, "json", sep=".")))
results_tab = na.omit(melt(
rbindlist(results, fill=TRUE, idcol=TRUE),
id.vars=".id"
))
colnames(results_tab) = c("DataType", "PartitionType", "RuntimeSecs")
results_tab$Cost = results_tab$RuntimeSecs * cost_per_sec
if (log_scale) {
scale_fn = scale_x_log10
scale_lab = "Runtime (Log10(Sec))"
}
else {
scale_fn = scale_x_continuous
scale_lab = "Runtime (Sec)"
}
p = ggplot(results_tab, aes(x=RuntimeSecs, y=DataType, color=PartitionType)) +
geom_point(position=position_jitter(width=0, height=jitter), size=5) +
scale_fn(scale_lab, sec.axis = sec_axis(~ . * cost_per_sec, name = "Cost ($)")) +
ylab("Data Type")
ggsave(paste(prefix, "pdf", sep="."), p)
}
plot_results("results/targeted")
plot_results("results/whole", TRUE, 0.1)
plot_results = function(prefix, log_scale=FALSE, jitter=0) {
results = fromJSON(read_file(paste(prefix, "json", sep=".")))
results_tab = na.omit(melt(
rbindlist(results, fill=TRUE, idcol=TRUE),
id.vars=".id"
))
colnames(results_tab) = c("DataType", "PartitionType", "RuntimeSecs")
results_tab$Cost = results_tab$RuntimeSecs * cost_per_sec
if (log_scale) {
scale_fn = scale_x_log10
scale_lab = "Runtime (Log10(Sec))"
}
else {
scale_fn = scale_x_continuous
scale_lab = "Runtime (Sec)"
}
p = ggplot(results_tab, aes(x=RuntimeSecs, y=DataType, color=PartitionType)) +
geom_point(position=position_jitter(width=0, height=jitter), size=3) +
scale_fn(scale_lab, sec.axis = sec_axis(~ . * cost_per_sec, name = "Cost ($)")) +
ylab("Data Type")
ggsave(paste(prefix, "pdf", sep="."), p)
}
plot_results("results/targeted")
plot_results("results/whole", TRUE, 0.1)
??ggsave
plot_results = function(prefix, log_scale=FALSE, jitter=0) {
results = fromJSON(read_file(paste(prefix, "json", sep=".")))
results_tab = na.omit(melt(
rbindlist(results, fill=TRUE, idcol=TRUE),
id.vars=".id"
))
colnames(results_tab) = c("DataType", "PartitionType", "RuntimeSecs")
results_tab$Cost = results_tab$RuntimeSecs * cost_per_sec
if (log_scale) {
scale_fn = scale_x_log10
scale_lab = "Runtime (Log10(Sec))"
}
else {
scale_fn = scale_x_continuous
scale_lab = "Runtime (Sec)"
}
p = ggplot(results_tab, aes(x=RuntimeSecs, y=DataType, color=PartitionType)) +
geom_point(position=position_jitter(width=0, height=jitter), size=3) +
scale_fn(scale_lab, sec.axis = sec_axis(~ . * cost_per_sec, name = "Cost ($)")) +
ylab("Data Type")
ggsave(paste(prefix, "pdf", sep="."), p, width=8, height=4, units="in")
}
plot_results("results/targeted")
plot_results("results/whole", TRUE, 0.1)
plot_results = function(prefix, log_scale=FALSE, jitter=0) {
results = fromJSON(read_file(paste(prefix, "json", sep=".")))
results_tab = na.omit(melt(
rbindlist(results, fill=TRUE, idcol=TRUE),
id.vars=".id"
))
colnames(results_tab) = c("DataType", "PartitionType", "RuntimeSecs")
results_tab$Cost = results_tab$RuntimeSecs * cost_per_sec
if (log_scale) {
scale_fn = scale_x_log10
scale_lab = "Runtime (Log10(Sec))"
}
else {
scale_fn = scale_x_continuous
scale_lab = "Runtime (Sec)"
}
p = ggplot(results_tab, aes(x=RuntimeSecs, y=DataType, color=PartitionType)) +
geom_point(position=position_jitter(width=0, height=jitter), size=3) +
scale_fn(scale_lab, sec.axis = sec_axis(~ . * cost_per_sec, name = "Cost ($)")) +
ylab("Data Type")
ggsave(paste(prefix, "pdf", sep="."), p, width=8, height=3, units="in")
}
plot_results("results/targeted")
plot_results("results/whole", TRUE, 0.1)
plot_results = function(prefix, log_scale=FALSE, jitter=0) {
results = fromJSON(read_file(paste(prefix, "json", sep=".")))
results_tab = na.omit(melt(
rbindlist(results, fill=TRUE, idcol=TRUE),
id.vars=".id"
))
colnames(results_tab) = c("DataType", "PartitionType", "RuntimeSecs")
results_tab$Cost = results_tab$RuntimeSecs * cost_per_sec
if (log_scale) {
scale_fn = scale_x_log10
scale_lab = "Runtime (Log10(Sec))"
}
else {
scale_fn = scale_x_continuous
scale_lab = "Runtime (Sec)"
}
p = ggplot(results_tab, aes(x=RuntimeSecs, y=DataType, color=PartitionType)) +
geom_point(position=position_jitter(width=0, height=jitter), size=3) +
scale_fn(scale_lab, sec.axis = sec_axis(~ . * cost_per_sec, name = "Cost ($)")) +
ylab("Data Type") +
scale_fill_manual(values="blue", "orange", "purple", "grey")
ggsave(paste(prefix, "pdf", sep="."), p, width=8, height=3, units="in")
}
plot_results("results/targeted")
plot_results("results/whole", TRUE, 0.1)
plot_results = function(prefix, log_scale=FALSE, jitter=0) {
results = fromJSON(read_file(paste(prefix, "json", sep=".")))
results_tab = na.omit(melt(
rbindlist(results, fill=TRUE, idcol=TRUE),
id.vars=".id"
))
colnames(results_tab) = c("DataType", "PartitionType", "RuntimeSecs")
results_tab$Cost = results_tab$RuntimeSecs * cost_per_sec
if (log_scale) {
scale_fn = scale_x_log10
scale_lab = "Runtime (Log10(Sec))"
}
else {
scale_fn = scale_x_continuous
scale_lab = "Runtime (Sec)"
}
p = ggplot(results_tab, aes(x=RuntimeSecs, y=DataType, color=PartitionType)) +
geom_point(position=position_jitter(width=0, height=jitter), size=3) +
scale_fn(scale_lab, sec.axis = sec_axis(~ . * cost_per_sec, name = "Cost ($)")) +
ylab("Data Type") +
scale_fill_manual(values=c("blue", "orange", "purple", "grey"))
ggsave(paste(prefix, "pdf", sep="."), p, width=8, height=3, units="in")
}
plot_results("results/targeted")
plot_results("results/whole", TRUE, 0.1)
plot_results = function(prefix, log_scale=FALSE, jitter=0) {
results = fromJSON(read_file(paste(prefix, "json", sep=".")))
results_tab = na.omit(melt(
rbindlist(results, fill=TRUE, idcol=TRUE),
id.vars=".id"
))
colnames(results_tab) = c("DataType", "PartitionType", "RuntimeSecs")
results_tab$Cost = results_tab$RuntimeSecs * cost_per_sec
if (log_scale) {
scale_fn = scale_x_log10
scale_lab = "Runtime (Log10(Sec))"
}
else {
scale_fn = scale_x_continuous
scale_lab = "Runtime (Sec)"
}
p = ggplot(results_tab, aes(x=RuntimeSecs, y=DataType, color=PartitionType)) +
geom_point(position=position_jitter(width=0, height=jitter), size=3) +
scale_fn(scale_lab, sec.axis = sec_axis(~ . * cost_per_sec, name = "Cost ($)")) +
ylab("Data Type") +
scale_color_manual(values=c("blue", "orange", "purple", "grey"))
ggsave(paste(prefix, "pdf", sep="."), p, width=8, height=3, units="in")
}
plot_results("results/targeted")
plot_results("results/whole", TRUE, 0.1)
plot_results = function(prefix, scale_colors, log_scale=FALSE, jitter=0) {
results = fromJSON(read_file(paste(prefix, "json", sep=".")))
results_tab = na.omit(melt(
rbindlist(results, fill=TRUE, idcol=TRUE),
id.vars=".id"
))
colnames(results_tab) = c("DataType", "PartitionType", "RuntimeSecs")
results_tab$Cost = results_tab$RuntimeSecs * cost_per_sec
if (log_scale) {
scale_fn = scale_x_log10
scale_lab = "Runtime (Log10(Sec))"
}
else {
scale_fn = scale_x_continuous
scale_lab = "Runtime (Sec)"
}
p = ggplot(results_tab, aes(x=RuntimeSecs, y=DataType, color=PartitionType)) +
geom_point(position=position_jitter(width=0, height=jitter), size=3) +
scale_fn(scale_lab, sec.axis = sec_axis(~ . * cost_per_sec, name = "Cost ($)")) +
ylab("Data Type") +
scale_color_manual(values=scale_colors)
ggsave(paste(prefix, "pdf", sep="."), p, width=8, height=3, units="in")
}
plot_results("results/targeted", c("blue", "orange", "purple", "grey"))
plot_results("results/whole", c("purple", "blue", "gray", TRUE, 0.1)
plot_results = function(prefix, scale_colors, log_scale=FALSE, jitter=0) {
results = fromJSON(read_file(paste(prefix, "json", sep=".")))
results_tab = na.omit(melt(
rbindlist(results, fill=TRUE, idcol=TRUE),
id.vars=".id"
))
colnames(results_tab) = c("DataType", "PartitionType", "RuntimeSecs")
results_tab$Cost = results_tab$RuntimeSecs * cost_per_sec
if (log_scale) {
scale_fn = scale_x_log10
scale_lab = "Runtime (Log10(Sec))"
}
else {
scale_fn = scale_x_continuous
scale_lab = "Runtime (Sec)"
}
p = ggplot(results_tab, aes(x=RuntimeSecs, y=DataType, color=PartitionType)) +
geom_point(position=position_jitter(width=0, height=jitter), size=3) +
scale_fn(scale_lab, sec.axis = sec_axis(~ . * cost_per_sec, name = "Cost ($)")) +
ylab("Data Type") +
scale_color_manual(values=scale_colors)
ggsave(paste(prefix, "pdf", sep="."), p, width=8, height=3, units="in")
}
plot_results("results/targeted", c("blue", "orange", "purple", "grey"))
plot_results("results/whole", c("blue", "purple", "gray", TRUE, 0.1)
plot_results = function(prefix, scale_colors, log_scale=FALSE, jitter=0) {
results = fromJSON(read_file(paste(prefix, "json", sep=".")))
results_tab = na.omit(melt(
rbindlist(results, fill=TRUE, idcol=TRUE),
id.vars=".id"
))
colnames(results_tab) = c("DataType", "PartitionType", "RuntimeSecs")
results_tab$Cost = results_tab$RuntimeSecs * cost_per_sec
if (log_scale) {
scale_fn = scale_x_log10
scale_lab = "Runtime (Log10(Sec))"
}
else {
scale_fn = scale_x_continuous
scale_lab = "Runtime (Sec)"
}
p = ggplot(results_tab, aes(x=RuntimeSecs, y=DataType, color=PartitionType)) +
geom_point(position=position_jitter(width=0, height=jitter), size=3) +
scale_fn(scale_lab, sec.axis = sec_axis(~ . * cost_per_sec, name = "Cost ($)")) +
ylab("Data Type") +
scale_color_manual(values=scale_colors)
ggsave(paste(prefix, "pdf", sep="."), p, width=8, height=3, units="in")
}
plot_results("results/targeted", c("blue", "orange", "purple", "grey"))
plot_results("results/whole", c("blue", "purple", "gray"), TRUE, 0.1)
plot_results("results/targeted", c("blue", "purple", "gray"))
plot_results("results/whole", c("blue", "orange", "purple", "grey"), TRUE, 0.1)
plot_results("results/targeted", c("gray", "purple", "blue"))
plot_results("results/targeted", c("orange", "gray", "blue"))
plot_results("results/whole", c("blue", "purple", "orange", "grey"), TRUE, 0.1)
results_tab
results_tab %>% group_by(PartitionType) %>% summarize(cost=sum(Cost))
library(magrittr)
results_tab %>% group_by(PartitionType) %>% summarize(cost=sum(Cost))
library(dplyr)
install.packages("dplyr")
library(dplyr)
results_tab %>% group_by(PartitionType) %>% summarize(cost=sum(Cost))
.712 / 0.955
plot_results = function(prefix, scale_colors, log_scale=FALSE, jitter=0) {
results = fromJSON(read_file(paste(prefix, "json", sep=".")))
results_tab = na.omit(melt(
rbindlist(results, fill=TRUE, idcol=TRUE),
id.vars=".id"
))
colnames(results_tab) = c("DataType", "PartitionType", "RuntimeSecs")
results_tab$Cost = results_tab$RuntimeSecs * cost_per_sec
if (log_scale) {
scale_fn = scale_x_log10
scale_lab = "Runtime (Log10(Sec))"
}
else {
scale_fn = scale_x_continuous
scale_lab = "Runtime (Sec)"
}
p = ggplot(results_tab, aes(x=RuntimeSecs, y=DataType, color=PartitionType)) +
geom_point(position=position_jitter(width=0, height=jitter), size=3) +
scale_fn(scale_lab, sec.axis = sec_axis(~ . * cost_per_sec, name = "Cost ($)")) +
ylab("Data Type") +
scale_color_manual(values=scale_colors)
ggsave(paste(prefix, "pdf", sep="."), p, width=8, height=3, units="in")
results_tab %>% group_by(PartitionType) %>% summarize(cost=sum(Cost))
}
plot_results("results/targeted", c("orange", "gray", "blue"))
plot_results("results/whole", c("blue", "purple", "orange", "grey"), TRUE, 0.1)
10.5 / 10.6
plot_results = function(prefix, scale_colors, log_scale=FALSE, jitter=0) {
results = fromJSON(read_file(paste(prefix, "json", sep=".")))
results_tab = na.omit(melt(
rbindlist(results, fill=TRUE, idcol=TRUE),
id.vars=".id"
))
colnames(results_tab) = c("DataType", "PartitionType", "RuntimeSecs")
results_tab$Cost = results_tab$RuntimeSecs * cost_per_sec
if (log_scale) {
scale_fn = scale_x_log10
scale_lab = "Runtime (Log10(Sec))"
}
else {
scale_fn = scale_x_continuous
scale_lab = "Runtime (Sec)"
}
p = ggplot(results_tab, aes(x=RuntimeSecs, y=DataType, color=PartitionType)) +
geom_point(position=position_jitter(width=0, height=jitter), size=3) +
scale_fn(scale_lab, sec.axis = sec_axis(~ . * cost_per_sec, name = "Cost ($)")) +
ylab("Data Type") +
scale_color_manual(values=scale_colors)
ggsave(paste(prefix, "pdf", sep="."), p, width=8, height=3, units="in")
results_tab %>% group_by(PartitionType) %>% summarize(duration=sum(RuntimeSecs), cost=sum(Cost))
}
plot_results("results/targeted", c("orange", "gray", "blue"))
plot_results("results/whole", c("blue", "purple", "orange", "grey"), TRUE, 0.1)
1081/1449
plot_results = function(prefix, scale_colors, log_scale=FALSE, jitter=0) {
results = fromJSON(read_file(paste(prefix, "json", sep=".")))
results_tab = na.omit(melt(
rbindlist(results, fill=TRUE, idcol=TRUE),
id.vars=".id"
))
colnames(results_tab) = c("DataType", "PartitionType", "RuntimeSecs")
results_tab$Cost = results_tab$RuntimeSecs * cost_per_sec
if (log_scale) {
scale_fn = scale_x_log10
scale_lab = "Runtime (Log10(Sec))"
}
else {
scale_fn = scale_x_continuous
scale_lab = "Runtime (Sec)"
}
p = ggplot(results_tab, aes(x=RuntimeSecs, y=DataType, color=PartitionType)) +
geom_point(position=position_jitter(width=0, height=jitter), size=3) +
scale_fn(scale_lab, sec.axis = sec_axis(~ . * cost_per_sec, name = "Cost ($)")) +
ylab("Data Type") +
scale_color_manual(values=scale_colors)
ggsave(paste(prefix, "pdf", sep="."), p, width=8, height=3, units="in")
results_tab
}
targ_res = plot_results("results/targeted", c("orange", "gray", "blue"))
targ_res %>% group_by(PartitionType) %>% summarize(duration=sum(RuntimeSecs), cost=sum(Cost))
targ_res %>% group_by(DataType) %>% summarize(duration=sum(RuntimeSecs), cost=sum(Cost))
whol_res = plot_results("results/whole", c("blue", "purple", "orange", "grey"), TRUE, 0.1)
whol_res %>% group_by(PartitionType) %>% summarize(duration=sum(RuntimeSecs), cost=sum(Cost))
whol_res %>% group_by(DataType) %>% summarize(duration=sum(RuntimeSecs), cost=sum(Cost))
targ_res
541/663
1-(541/663)
1-(372/575)
1-(168/206)
whol_res
1-(15769/15798)
1-(239/271)
targ_res %>% group_by(PartitionType) %>% summarize(duration=sum(RuntimeSecs), cost=sum(Cost))
whol_res %>% group_by(PartitionType) %>% summarize(duration=sum(RuntimeSecs), cost=sum(Cost))
16008+1081
16008/22716
1-(16008/22716)
1-(239/2087)
1-(239/271)
1-(239/274)
